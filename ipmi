#!/usr/bin/env bash

D="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")"
. "$D/ipmi-common"


TARGET=54
SPEED=1000
MAX_SPEED=10000
SPEED_INCREMENT=10
SPEED_INCREMENT_INTERVAL=1
UPDATE_INTERVAL_SECONDS=5


cleanup() {
    echo "Exiting..." >&2
    disable_manual_fan
    exit
}

trap "cleanup" TERM INT;
trap "kill 0" EXIT




adjust() {
    local temp="$(get_temp)"
    local diff="$((temp - TARGET))"
    local speed_incr="$((SPEED_INCREMENT * UPDATE_INTERVAL_SECONDS / SPEED_INCREMENT_INTERVAL * diff))"
    local speed_incr_percent="$((speed_incr / MAX_SPEED))"
    SPEED="$((SPEED + speed_incr))"
    if [ "$SPEED" -lt "0" ]; then
        SPEED="0"
    fi

    if [ "$SPEED" -gt "$MAX_SPEED" ]; then
        SPEED="$MAX_SPEED"
    fi
    SPEED_PERCENT="$((SPEED * 100 / MAX_SPEED))"
    local speed_hex="$(printf "0x%.2x" "$SPEED_PERCENT")"

    echo "Temp is $temp C" >&2
    echo "Difference to target is $diff C" >&2
    echo "Incrementing fan speed $speed_incr ($speed_incr_percent%)" >&2
    echo "Resulting speed is $SPEED/$MAX_SPEED ($SPEED_PERCENT%)" >&2

    set_fan "$speed_hex"
}




# Hack since the fancontrol does not seem to workcorrectly if startedimmediately at boot
sleep 20

while true; do
    # I've had the manual fan control disable on its own once (idrac reset or
    # something?). Therefore periodically re-enable manual fan control
    enable_manual_fan
    for i in $(seq 1 20); do
        adjust
        echo "Next update in ${UPDATE_INTERVAL_SECONDS}s..." >&2
        sleep "$UPDATE_INTERVAL_SECONDS"
    done
done
