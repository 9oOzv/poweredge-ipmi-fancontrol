#!/usr/bin/env bash

D="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")"
. "$D/ipmi-common"





declare -a SPEED
declare -a THRESHOLD

SPEED[0]="0x00"
SPEED[1]="0x0a"
SPEED[2]="0x0d"
SPEED[3]="0x11"
SPEED[4]="0x12"
SPEED[5]="0x13"
SPEED[6]="0x14"
SPEED[7]="0x16"
SPEED[8]="0x18"
SPEED[9]="0x20"
SPEED[10]="0x28"
SPEED[11]="0x32"
SPEED[12]="0x3c"
SPEED[13]="0x50"
SPEED[14]="0x64"
SPEED[15]="0x64"
SPEED[16]="0x64"

TRESHOLD[0]=-1000
TRESHOLD[1]=44
TRESHOLD[2]=46
TRESHOLD[3]=48
TRESHOLD[4]=50
TRESHOLD[5]=52
TRESHOLD[6]=54
TRESHOLD[7]=56
TRESHOLD[8]=58
TRESHOLD[9]=60
TRESHOLD[10]=62
TRESHOLD[11]=64
TRESHOLD[12]=66
TRESHOLD[13]=68
TRESHOLD[14]=70
TRESHOLD[15]=72

N=15




cleanup() {
    echo "Exiting..." >&2
    disable_manual_fan
    exit
}

trap "cleanup" TERM INT;
trap "kill 0" EXIT




adjust() {
    local temp="$(get_temp)"
    local speed

    for i in $(seq "$N" -1 "0"); do
        if [ "$temp" -ge "${TRESHOLD[$i]}" ]; then
            break
        fi
    done

    echo "Temp is $temp C" >&2
    echo "Temp over threshold $i (${TRESHOLD[$i]} C)" >&2
    speed="${SPEED[$((i+1))]}"

    set_fan "$speed"
}




# Hack since the fancontrol does not seem to workcorrectly if startedimmediately at boot
sleep 20

while true; do
    # I've had the manual fan control disable on its own once (idrac reset or
    # something?). Therefore periodically re-enable manual fan control
    enable_manual_fan
    for i in $(seq 1 20); do
        adjust
        echo "Next update in 15s..." >&2
        sleep 15
    done
done
