#!/usr/bin/env bash

D="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")"
. "$D/ipmi-common"

LAST_TEMP=0
TEMP_DECREASING=
TEMP_INCREASING=


if [ $# -ge 1 ]; then
    ipmi_command "$@"
    exit $?
fi


cleanup() {
    info "Exiting..."
    disable_manual_fan
    exit
}

trap "cleanup" TERM INT;
trap "kill 0" EXIT




adjust() {
    local temp="$(get_temp)"
    if [ ! "${temp-}" ]; then
        info "Could not read temperatures"
    fi
    if [ "${LAST_TEMP-}" ]; then
        if [ "$temp" -lt "$LAST_TEMP" ]; then
            TEMP_DECREASING=1
            TEMP_INCREASING=
        elif [ "$temp" -gt "$LAST_TEMP" ]; then
            TEMP_DECREASING=
            TEMP_INCREASING=1
        fi
    fi

    local diff="$((temp - TARGET))"

    local speed_incr="$((SPEED_INCREMENT * UPDATE_INTERVAL_SECONDS / SPEED_INCREMENT_INTERVAL * diff))"
    if [ "$speed_incr" -gt 0 ] && [ "$TEMP_DECREASING" ]; then
        speed_incr=0
    fi
    if [ "$speed_incr" -lt 0 ] && [ "$TEMP_INCREASING" ]; then
        speed_incr=0
    fi
    local speed_incr_percent="$((speed_incr / MAX_SPEED))"

    SPEED="$((SPEED + speed_incr))"
    if [ "$SPEED" -lt "0" ]; then
        SPEED="0"
    fi
    if [ "$SPEED" -gt "$MAX_SPEED" ]; then
        SPEED="$MAX_SPEED"
    fi
    SPEED_PERCENT="$((SPEED * 100 / MAX_SPEED))"
    local speed_hex="$(printf "0x%.2x" "$SPEED_PERCENT")"

    info "Last temp was $LAST_TEMP C"
    info "Current temp is $temp C"
    if [ "$TEMP_DECREASING" ]; then
        info "Temp is decreasing"
    fi
    if [ "$TEMP_INCREASING" ]; then
        info "Temp is increasing"
    fi
    info "Difference to target is $diff C"
    info "Changing fan speed by $speed_incr ($speed_incr_percent%)"
    info "Resulting speed is $SPEED/$MAX_SPEED ($SPEED_PERCENT%)"

    set_fan "$speed_hex"
    LAST_TEMP="$temp"
}




# Hack since the fancontrol does not seem to workcorrectly if startedimmediately at boot
info "Delaying launch by ${START_DELAY_SECONDS}s"
sleep "$START_DELAY_SECONDS"

while true; do
    # I've had the manual fan control disable on its own once (idrac reset or
    # something?). Therefore periodically re-enable manual fan control
    enable_manual_fan
    for i in $(seq 1 20); do
        adjust
        info "Next update in ${UPDATE_INTERVAL_SECONDS}s..."
        sleep "$UPDATE_INTERVAL_SECONDS"
    done
done
